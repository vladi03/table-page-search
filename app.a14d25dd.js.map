{"version":3,"sources":["webpack:///./src/tables/extras/SpinnerDownloading.js","webpack:///./src/tables/tableStandard/PaginationStype.js","webpack:///./src/tables/tableStandard/TablePagination.js","webpack:///./src/tables/extras/NoData.js","webpack:///./src/tables/tableStandard/TableSkeletonPaging.js","webpack:///./src/tables/tableStandard/TableHeaderSort.js","webpack:///./src/tables/helpers/objectValue.js","webpack:///./src/tables/tableStandard/TablePaging.js","webpack:///./src/tables/helpers/pagingCalc.js","webpack:///./src/tables/index.js","webpack:///./src/index.js"],"names":["SpinnerDownloading","_ref","spinnerSize","style","loading","children","classes","makeStyles","spinnerIcon","width","height","spinnerWrapper","position","margin","fabProgress","color","left","zIndex","useStyles","undefined","react_default","a","createElement","className","_extends","PlayForWork","CircularProgress","size","root","display","marginTop","containerHalfLeft","justifyContent","marginLeft","containerHalfRight","paddingRight","mainText","fontSize","lineHeight","pagingMessageContainer","alignSelf","minHeight","textAlign","marginRight","pagingMessage","formControl","column","flexBasis","pageButtonsContainer","pageButtonsText","pageButtonsIconsText","pageButton","padding","borderRadius","backgroundColor","border","pageButtonEndLeft","borderTopLeftRadius","borderBottomLeftRadius","pageButtonEndRight","borderTopRightRadius","borderBottomRightRadius","TablePagination","pageList","currentPageNum","onPageChange","showPrevButton","showNextButton","allPages","hasPaging","condensed","Typography","FormControl","Select","native","value","onChange","event","parseInt","target","map","pageNum","index","key","IconButton","disabled","onClick","FirstPage","ChevronLeft","page","id","ChevronRight","LastPage","Chip","avatar","Avatar","LibraryBooks","label","ListItemText","TableRow","TableCell","_ref3","dataCount","containerClass","ListItem","_ref4","TableSkeletonPaging","tableHeader","tableRows","paging","tableStyleName","Fragment","Table","TableBody","rows","length","TableSkeletonPaging_ref2","TablePagination_TablePagination","TableSkeletonPaging_extends","TableHeaderSort","headerConfig","sortField","sortDescending","onSetSortField","TableHead","columns","config","headerCellStyle","fieldForSort","TableSortLabel","active","direction","columnLabel","getObjectValue","targetObject","fieldName","childFields","split","propValue","TablePaging","dataList","filterText","searchFunction","onRowClick","onServerSidePaging","totalRecordsFromServer","restPageNumber","itemsPerPage","_useState","useState","defaultSort","setSortField","_useState2","setSortDescending","_useState3","activePage","setActivePage","filterTextLower","toLowerCase","useEffect","filteredList","filter","item","getObjectJoin","Object","values","_typeof","join","indexOf","itemList","isDescending","sort","aIn","bIn","aValue","bValue","sortItems","allRows","currentPageNumOrLast","totalRecordFromServer","result","hasError","errorMessage","errorMessageDetail","calcTotalPages","Math","ceil","pageAllIndex","push","startPage","calcIndexStart","endPage","pagesToShow","pageIndex","endItemIndex","slice","ex","message","calcPage","TableHeaderSort_TableHeaderSort","newSortField","SpinnerDownloading_SpinnerDownloading","TableSkeletonPaging_TableSkeletonPaging","newPage","onItemClick","_useState4","selectedRowId","setSelectedRowId","warningWasShown","row","hasClick","rowWithClick","rowWithoutClick","onSelectRow","header","TablePaging_extends","cellStyle","hasValue","console","warn","getValue","&:hover","cursor","hideWhenCondensed","lastName","firstName","TableDemo","_React$Component","_classCallCheck","this","_this","_possibleConstructorReturn","call","state","users","mockUsers","removeStyling","selectedUser","handleChange","name","_this$setState","setState","handleRowClick","user","_inherits","prototype","componentDidMount","_this2","setTimeout","timeOut","searchName","render","_this3","_state","TextField","vaule","FormControlLabel","control","Checkbox","checked","TablePaging_TablePaging","React","Component","location","city","tables_TableDemo","document","querySelector"],"mappings":"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","file":"app.a14d25dd.js","sourcesContent":["import React from 'react';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport {  PlayForWork as LoadingIcon} from '@material-ui/icons';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles  = (spinnerSize) => makeStyles({\r\n    spinnerIcon: {\r\n        width: spinnerSize, height: spinnerSize\r\n    },\r\n    spinnerWrapper: {\r\n        width: spinnerSize,\r\n        position: 'relative',\r\n        margin: 'auto',\r\n    },\r\n    fabProgress: {\r\n        color: \"primary\",\r\n        position: 'absolute',\r\n        left: 0,\r\n        zIndex: 1,\r\n    },\r\n})();\r\n\r\nexport const SpinnerDownloading = ({spinnerSize, style, loading, children}) => {\r\n    const classes = useStyles(spinnerSize);\r\n\r\n    return (\r\n        (children === undefined || loading) ?\r\n            <div className={classes.spinnerWrapper} style={{...style}}>\r\n                <LoadingIcon color=\"secondary\" className={classes.spinnerIcon} />\r\n                <CircularProgress\r\n                    size={spinnerSize}\r\n                    className={classes.fabProgress}\r\n                />\r\n            </div> :\r\n            children\r\n    );\r\n};","import React from \"react\";\r\nimport { makeStyles  } from '@material-ui/styles';\r\n\r\nexport const useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n        display: \"flex\",\r\n        marginTop: \"10px\",\r\n    },\r\n    containerHalfLeft: {\r\n        width: \"50%\",\r\n        display: \"flex\",\r\n        justifyContent: \"flex-start\",\r\n        marginLeft: \"10px\",\r\n    },\r\n    containerHalfRight: {\r\n        width: \"50%\",\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\",\r\n        paddingRight: 15,\r\n    },\r\n    mainText: {\r\n        fontSize: 15,\r\n        lineHeight: \"36px\",\r\n    },\r\n    pagingMessageContainer: {\r\n        alignSelf: \"flex-start\",\r\n        minHeight: \"36px\",\r\n        textAlign: \"right\",\r\n        marginRight: \"10px\",\r\n    },\r\n    pagingMessage: {\r\n        fontSize: \"14px\",\r\n        lineHeight: \"36px\",\r\n    },\r\n    formControl: {\r\n        fontSize: \"14px\",\r\n    },\r\n    column: {\r\n        flexBasis: '10%',\r\n        minHeight: \"36px\",\r\n    },\r\n    pageButtonsContainer: {\r\n        textAlign: \"center\",\r\n        width: 33,\r\n    },\r\n    pageButtonsText: {\r\n        marginTop: \"-2px\"\r\n    },\r\n    pageButtonsIconsText: {\r\n        marginTop: \"-1px\"\r\n    },\r\n    pageButton: {\r\n        padding: \"8px\",\r\n        lineHeight: \"23px\",\r\n        width:\"33.79px\",\r\n        height: \"34px\",\r\n        fontSize: \"14px\",\r\n        borderRadius: 0,\r\n        backgroundColor: \"white\",\r\n        color: \"blue\",\r\n        border: \"1px solid #ddd\",\r\n    },\r\n    pageButtonEndLeft: {\r\n        padding: \"8px\",\r\n        lineHeight: \"23px\",\r\n        width:\"33.79px\",\r\n        height: \"34px\",\r\n        fontSize: \"14px\",\r\n        borderRadius: 0,\r\n        backgroundColor: \"white\",\r\n        color: \"blue\",\r\n        border: \"1px solid #ddd\",\r\n        borderTopLeftRadius: \"4px\",\r\n        borderBottomLeftRadius: \"4px\",\r\n    },\r\n    pageButtonEndRight: {\r\n        padding: \"8px\",\r\n        lineHeight: \"23px\",\r\n        width:\"33.79px\",\r\n        height: \"34px\",\r\n        fontSize: \"14px\",\r\n        borderRadius: 0,\r\n        backgroundColor: \"white\",\r\n        color: \"blue\",\r\n        border: \"1px solid #ddd\",\r\n        borderTopRightRadius: \"4px\",\r\n        borderBottomRightRadius: \"4px\",\r\n    }\r\n});","import React from \"react\";\r\nimport { Typography, IconButton,FormControl, Select} from '@material-ui/core';\r\nimport { ChevronLeft,FirstPage, ChevronRight, LastPage } from '@material-ui/icons';\r\nimport { useStyles } from \"./PaginationStype\";\r\n\r\nexport const TablePagination = (\r\n    { pageList, pagingMessage, currentPageNum,\r\n      onPageChange, showPrevButton, showNextButton,\r\n      allPages, hasPaging, condensed\r\n    }) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        hasPaging &&\r\n        <div className={classes.root}>\r\n            <div className={classes.containerHalfLeft}>\r\n                <div className={classes.pagingMessageContainer}>\r\n                    <Typography className={classes.pagingMessage}>\r\n                        {condensed ?\r\n                            <span> {pagingMessage} Go to :</span>\r\n                            :\r\n                            <span>Showing {pagingMessage} records,  Go to :</span>\r\n                        }\r\n                    </Typography>\r\n                </div>\r\n                <div className={classes.pagingMessageContainer}>\r\n                    <FormControl>\r\n                        <Select\r\n                            className={classes.formControl}\r\n                            native\r\n                            value={currentPageNum}\r\n                            onChange={(event) => onPageChange(parseInt(event.target.value))}\r\n                        >\r\n                            {allPages.map((pageNum, index) => (<option key={index} value={pageNum}>{pageNum}</option>))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n            </div>\r\n            <div className={classes.containerHalfRight}>\r\n                <div className={classes.pageButtonsContainer}>\r\n                    <IconButton disabled={!showPrevButton} className={classes.pageButtonEndLeft}\r\n                                onClick={() => onPageChange(1)}>\r\n                        <FirstPage className={classes.pageButtonsIconsText} fontSize=\"small\"/>\r\n                    </IconButton>\r\n                </div>\r\n                <div className={classes.pageButtonsContainer}>\r\n                    <IconButton disabled={!showPrevButton} className={classes.pageButton}\r\n                                onClick={() => onPageChange(currentPageNum - 1)}>\r\n                        <ChevronLeft className={classes.pageButtonsIconsText} fontSize=\"small\"/>\r\n                    </IconButton>\r\n                </div>\r\n                {pageList.map((page, index) => (\r\n                    <div key={index} className={classes.pageButtonsContainer}>\r\n                        <IconButton className={classes.pageButton}\r\n                                    onClick={() => onPageChange(page)}\r\n                                    id={`pageNumButton-${index}`}\r\n                                    color=\"primary\"\r\n                                    style={{\r\n                                        backgroundColor: page === currentPageNum ? \"#428bca\" : \"\",\r\n                                        color: page === currentPageNum ? \"white\" : \"\"\r\n                                    }}\r\n                        >\r\n                            <span className={classes.pageButtonsText}>{page}</span>\r\n                        </IconButton>\r\n                    </div>))}\r\n                <div className={classes.pageButtonsContainer}>\r\n                    <IconButton disabled={!showNextButton} className={classes.pageButton}\r\n                                onClick={() => onPageChange(currentPageNum + 1)}>\r\n                        <ChevronRight className={classes.pageButtonsIconsText} fontSize=\"small\"/>\r\n                    </IconButton>\r\n                </div>\r\n                <div className={classes.pageButtonsContainer}>\r\n                    <IconButton disabled={!showNextButton} className={classes.pageButtonEndRight}\r\n                                onClick={() => onPageChange(true)}>\r\n                        <LastPage className={classes.pageButtonsIconsText} fontSize=\"small\"/>\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import React from \"react\";\r\nimport { Chip, Avatar, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { LibraryBooks } from \"@material-ui/icons\";\r\n\r\n// noinspection JSUnusedGlobalSymbols\r\nexport const NoData = ({dataCount, children})=> (\r\n    dataCount === 0 &&\r\n    <Chip\r\n        avatar={\r\n            <Avatar>\r\n                <LibraryBooks />\r\n            </Avatar>\r\n        }\r\n        label=\"No Data\"\r\n    />\r\n    || children\r\n);\r\n\r\nexport const ListNoData = ({dataCount, containerClass, className, children})=> (\r\n    <div className={containerClass}>\r\n        {dataCount === 0 &&\r\n        <ListItem className={className}>\r\n            <ListItemText>\r\n                <Chip\r\n                    avatar={\r\n                        <Avatar>\r\n                            <LibraryBooks />\r\n                        </Avatar>\r\n                    }\r\n                    label=\"No Data\"\r\n                />\r\n            </ListItemText>\r\n        </ListItem>\r\n        || children\r\n        }\r\n    </div>\r\n);","import React from \"react\";\r\nimport { Table, TableBody, TableRow, TableCell } from '@material-ui/core';\r\nimport { TablePagination } from \"./TablePagination\";\r\nimport {ListNoData} from \"../extras/NoData\";\r\n\r\nexport const TableSkeletonPaging = ({tableHeader, tableRows, paging, tableStyleName, onPageChange, condensed}) => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Table className={tableStyleName}>\r\n                {tableHeader}\r\n                <TableBody>\r\n                    {paging.rows.map(tableRows)}\r\n                    {paging.rows.length === 0 &&\r\n                    <TableRow>\r\n                        <TableCell>\r\n                            <ListNoData dataCount={0} />\r\n                        </TableCell>\r\n                    </TableRow>\r\n                    }\r\n                </TableBody>\r\n            </Table>\r\n\r\n            <TablePagination {...paging} onPageChange={onPageChange} condensed={condensed} />\r\n        </React.Fragment>\r\n    );\r\n};","import React from \"react\";\r\nimport { TableHead, TableRow, TableCell, TableSortLabel } from '@material-ui/core';\r\n\r\nexport const TableHeaderSort = ({headerConfig, sortField, sortDescending, onSetSortField})=>(\r\n    <TableHead>\r\n        <TableRow>\r\n            {headerConfig.columns.map((config, index) => (\r\n                <TableCell key={index}\r\n                           style={config.headerCellStyle}\r\n                           className={sortField === config.fieldForSort ? \"sorted\" : \"\"}>\r\n                    {config.fieldForSort ?\r\n                        <TableSortLabel\r\n                            active={sortField === config.fieldForSort}\r\n                            direction={sortDescending ? \"desc\" : \"asc\"}\r\n                            onClick={() => onSetSortField(config.fieldForSort)}\r\n                        >\r\n                            {config.columnLabel}\r\n                        </TableSortLabel>\r\n                        :\r\n                        <span>{config.columnLabel}</span>\r\n                    }\r\n                </TableCell>\r\n            )) }\r\n        </TableRow>\r\n    </TableHead>\r\n);","\r\nexport const getObjectValue = (targetObject, fieldName) => {\r\n    if(fieldName) {\r\n        const childFields = fieldName.split('.');\r\n        //get to the property value by iterating through the object structure\r\n        let propValue = targetObject;\r\n        for (let index in childFields) {\r\n            // noinspection JSUnfilteredForInLoop\r\n            propValue = propValue[childFields[index]];\r\n        }\r\n        return propValue === undefined || propValue === null ? \"\" : propValue;\r\n    } else return targetObject === undefined || targetObject === null ? \"\" : targetObject;\r\n};\r\n\r\nexport const getObjectJoin = (targetObject) => {\r\n    return targetObject &&\r\n        (Object.values(targetObject).map((item) => typeof(item) === \"object\" ? getObjectJoin(item) : item).join()) || \"\";\r\n};","import React, {useState, useEffect} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {SpinnerDownloading} from \"../extras/SpinnerDownloading\";\r\nimport {TableSkeletonPaging} from \"./TableSkeletonPaging\";\r\nimport {TableRow ,TableCell, makeStyles} from \"@material-ui/core\";\r\nimport { TableHeaderSort } from \"./TableHeaderSort\";\r\nimport {calcPage, sortItems} from \"../helpers/pagingCalc\";\r\nimport {getObjectValue, getObjectJoin} from \"../helpers/objectValue\";\r\n\r\nexport const TablePaging = ({loading, dataList, headerConfig, filterText, tableStyleName,\r\n                                searchFunction, onRowClick, condensed, onServerSidePaging,\r\n                                totalRecordsFromServer, restPageNumber\r\n                            }) => {\r\n    const itemsPerPage = headerConfig.itemsPerPage || 10;\r\n    const [sortField, setSortField]= useState(headerConfig.defaultSort || headerConfig.columns[0].fieldForSort);\r\n    const [sortDescending, setSortDescending]= useState(headerConfig.sortDescending || false);\r\n    const [activePage, setActivePage] = useState(1);\r\n    const filterTextLower  = filterText && filterText.toLowerCase();\r\n\r\n    useEffect(() => {\r\n        if(restPageNumber > 0)\r\n            setActivePage(restPageNumber);\r\n    }, [restPageNumber]);\r\n\r\n    let filteredList = [];\r\n    if(filterText && filterText.length > 0) {\r\n        filteredList = searchFunction ? searchFunction(dataList) : dataList.filter((item) => {\r\n            return item && getObjectJoin(item).toLowerCase().indexOf(filterTextLower) > -1;//.indexOf(filterText.toLowerCase()) > -1;\r\n        });\r\n    } else {\r\n        filteredList = [...dataList];\r\n    }\r\n\r\n\r\n    const onSetSortField = (newSortField) => {\r\n        const isDescending = newSortField === sortField && !sortDescending;\r\n        setSortDescending(isDescending);\r\n        setSortField(newSortField);\r\n        if(onServerSidePaging)\r\n            onServerSidePaging({\r\n                sortField: newSortField,\r\n                sortDescending: isDescending,\r\n                itemsPerPage, activePage\r\n            });\r\n    };\r\n\r\n    const onPageChange = (newPage) => {\r\n        setActivePage(newPage);\r\n        if(onServerSidePaging)\r\n            onServerSidePaging({\r\n                sortField,\r\n                sortDescending,\r\n                itemsPerPage,\r\n                activePage : newPage\r\n            });\r\n    };\r\n\r\n    if(!onServerSidePaging)\r\n        sortItems(filteredList, sortField, sortDescending);\r\n    const paging = calcPage(filteredList, itemsPerPage, activePage, totalRecordsFromServer);\r\n\r\n    const tableHeader =(\r\n        <TableHeaderSort headerConfig={headerConfig}\r\n                         sortField={sortField}\r\n                         sortDescending={sortDescending}\r\n                         onSetSortField={onSetSortField}\r\n        />);\r\n\r\n    return (\r\n        <SpinnerDownloading spinnerSize={50} loading={loading}>\r\n            <TableSkeletonPaging\r\n                paging={paging}\r\n                tableRows={tableRows(headerConfig, onRowClick)}\r\n                tableHeader={tableHeader}\r\n                condensed={condensed}\r\n                onPageChange={onPageChange}\r\n                tableStyleName={tableStyleName}\r\n            />\r\n        </SpinnerDownloading>\r\n    )\r\n};\r\n\r\nTablePaging.propTypes = {\r\n    loading: PropTypes.bool,\r\n    dataList: PropTypes.array.isRequired,\r\n    headerConfig: PropTypes.object.isRequired,\r\n    filterText: PropTypes.string,\r\n    tableStyleName: PropTypes.string,\r\n    searchFunction: PropTypes.func,\r\n    onRowClick: PropTypes.func,\r\n    condensed: PropTypes.bool,\r\n};\r\n\r\nexport const tableRows = (headerConfig, onItemClick) => {\r\n    const classes = useStyles();\r\n    const [selectedRowId, setSelectedRowId ] = useState(null);\r\n    let warningWasShown = false;\r\n\r\n    const getValue = (row, header) => {\r\n        const hasValue = !!(header.display || header.fieldForSort);\r\n\r\n        if(!(warningWasShown || hasValue)) {\r\n            console.warn(`Column \"${header.columnLabel}\" must have a \"display\" or \"fieldSort\" field`);\r\n            warningWasShown = true;\r\n        }\r\n\r\n        return hasValue ? header.display ? header.display(row) :\r\n            (header.fieldForSort !== undefined && getObjectValue(row, header.fieldForSort))\r\n            : \"\";\r\n    };\r\n\r\n    const onSelectRow = (row)=> {\r\n        if(headerConfig.key)\r\n            setSelectedRowId(row[headerConfig.key]);\r\n        onItemClick(row)\r\n    };\r\n\r\n    return (row, index) => {\r\n        const hasClick = !!onItemClick;\r\n\r\n        /** @namespace header.cellStyle */\r\n        return (\r\n            <TableRow key={index}\r\n                      className={hasClick ? classes.rowWithClick : classes.rowWithoutClick}\r\n                      onClick={() => hasClick ? onSelectRow(row) : undefined}>\r\n                {headerConfig.columns.map((header, index) => (\r\n                    <TableCell key={index} style={{\r\n                        fontSize: 14,\r\n                        backgroundColor: selectedRowId !== null && headerConfig.key &&\r\n                        selectedRowId === row[headerConfig.key] && \"#cfcdd1\",\r\n                        ...header.cellStyle\r\n                    }}>\r\n                        <span>{getValue(row, header)}</span>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        );\r\n    };\r\n};\r\n\r\n//'&:hover': {\r\nconst useStyles = makeStyles({\r\n    rowWithoutClick:{\r\n        height: 39\r\n    },\r\n    rowWithClick:{\r\n        height: 39,\r\n        '&:hover': {\r\n            backgroundColor: \"#fafaf9\"\r\n        },\r\n        cursor: \"pointer\"\r\n    }\r\n});","import {getObjectValue} from \"./objectValue\";\r\n\r\nexport const calcPage = (allRows,  itemsPerPage, currentPageNumOrLast, totalRecordFromServer) => {\r\n    const result = {\r\n        rows: [],\r\n        pageList: [],\r\n        allPages: [],\r\n        pagingMessage: \"No Records\",\r\n        hasError: false,\r\n        errorMessage: \"\",\r\n        errorMessageDetail: \"\",\r\n        hasPaging: true,\r\n        showPrevButton: true,\r\n        showNextButton: true,\r\n        currentPageNum: currentPageNumOrLast\r\n    };\r\n\r\n    try {\r\n        const pagesToShow = 4;\r\n        const calcTotalPages = totalRecordFromServer ?\r\n            Math.ceil(totalRecordFromServer / itemsPerPage)  :\r\n            Math.ceil(allRows.length / itemsPerPage);\r\n\r\n        for(let pageAllIndex = 1; pageAllIndex <= calcTotalPages; pageAllIndex++)\r\n            result.allPages.push(pageAllIndex);\r\n\r\n        result.hasPaging = calcTotalPages > 1;\r\n        const currentPageNum = currentPageNumOrLast === true ? calcTotalPages : currentPageNumOrLast;\r\n        result.currentPageNum = currentPageNum;\r\n        let startPage = currentPageNum > 2 ? currentPageNum - 1 : 1;\r\n\r\n        let calcIndexStart = 0;\r\n        //if the page number exceeds the total number of pages or is less than zero go to page 1\r\n        if(currentPageNum <= calcTotalPages && currentPageNum > 0)\r\n            calcIndexStart = (currentPageNum -1 ) * itemsPerPage;\r\n        else {\r\n            startPage = 1;\r\n            result.currentPageNum = 1;\r\n        }\r\n\r\n        let endPage = (startPage + pagesToShow - 1) < calcTotalPages ? startPage + pagesToShow - 1 : calcTotalPages;\r\n        //check to make sure we have the correct number of pages showing.\r\n        if((endPage - startPage) < pagesToShow -1 && allRows.length > 0 && endPage >= pagesToShow) {\r\n            startPage = endPage - pagesToShow + 1;\r\n        }\r\n\r\n        if(startPage < 0) startPage =1;\r\n\r\n        for (let pageIndex = startPage; pageIndex <= endPage; pageIndex++) {\r\n            result.pageList.push(pageIndex);\r\n        }\r\n\r\n        const endItemIndex = (calcIndexStart + itemsPerPage) < allRows.length ? (calcIndexStart + itemsPerPage) : allRows.length;\r\n        result.pagingMessage = totalRecordFromServer > 0 || allRows.length > 0 ?\r\n            `${calcIndexStart + 1}-${endItemIndex} of ${totalRecordFromServer || allRows.length}`\r\n            : \"No Data\";\r\n\r\n        result.rows = totalRecordFromServer ? allRows : allRows.slice(calcIndexStart, endItemIndex);\r\n        result.showPrevButton = result.currentPageNum > 1;\r\n        result.showNextButton = result.currentPageNum < calcTotalPages;\r\n    } catch (ex) {\r\n        result.hasError = true;\r\n        result.pagingMessage = \"ERROR\";\r\n        result.errorMessage = \"Invalid input when creating table paging\";\r\n        result.errorMessageDetail = ex.message || ex;\r\n        result.currentPageNum = 0;\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const sortItems = (itemList, sortField, isDescending) => {\r\n    itemList.sort((aIn, bIn) => {\r\n        const aValue = getObjectValue(aIn, sortField);\r\n        const bValue = getObjectValue(bIn, sortField);\r\n\r\n        if(aValue.toLowerCase && bValue.toLowerCase) {\r\n            if (aValue.toLowerCase() < bValue.toLowerCase())\r\n                return isDescending ? 1 : -1;\r\n\r\n            if (aValue.toLowerCase() > bValue.toLowerCase())\r\n                return isDescending ? -1 : 1;\r\n        } else {\r\n            if (aValue < bValue)\r\n                return isDescending ? 1 : -1;\r\n\r\n            if (aValue > bValue)\r\n                return isDescending ? -1 : 1;\r\n        }\r\n        return 0;\r\n    });\r\n};\r\n","import React from \"react\";\r\nimport {TextField, FormControlLabel, Checkbox} from \"@material-ui/core\"\r\nimport {TablePaging} from \"./tableStandard/TablePaging\";\r\nexport {TableSkeletonPaging} from \"./tableStandard/TableSkeletonPaging\";\r\n\r\nexport const headerConfig = {\r\n    key: \"id\",\r\n    itemsPerPage: 0,\r\n    defaultSort: \"firstName\",\r\n    columns: [\r\n        {  fieldForSort: \"id\", columnLabel: \"Id\",\r\n            headerCellStyle:{width:80}, hideWhenCondensed: true\r\n        },\r\n        {\r\n            fieldForSort: \"firstName\",\r\n            columnLabel: \"Name First\",\r\n            headerCellStyle:{width:120} },\r\n        { fieldForSort: \"lastName\", columnLabel: \"Name Last\",\r\n            headerCellStyle:{width:120}\r\n        },\r\n        { fieldForSort: \"location.city\", columnLabel: \"Location\" },\r\n        { display: (row)=> `${row.lastName}, ${row.firstName}`, columnLabel: \"Full Name\" }\r\n    ]\r\n};\r\n\r\nexport {TablePaging};\r\n\r\nexport class TableDemo extends React.Component {\r\n    state = {\r\n        loading: true,\r\n        users: mockUsers,\r\n        filterText: \"\",\r\n        removeStyling: true,\r\n        selectedUser: null\r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n        //this.timeOut = this.timeOut.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => this.timeOut(), 2000);\r\n    }\r\n\r\n    searchName(itemList) {\r\n        const {filterText} = this.state;\r\n        return itemList.filter((user) => {\r\n            return user.firstName.toLowerCase().indexOf(filterText.toLowerCase()) > -1;\r\n        });\r\n    };\r\n\r\n    timeOut() {\r\n        // noinspection JSCheckFunctionSignatures\r\n        this.setState({loading:false});\r\n    }\r\n\r\n    handleChange = (name, value) => {\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    handleRowClick = (user) => {\r\n        // noinspection JSCheckFunctionSignatures\r\n        this.setState({selectedUser: user});\r\n    };\r\n\r\n    render() {\r\n        const {loading, users, filterText, removeStyling, selectedUser} = this.state;\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <div style={{display:\"flex\"}}>\r\n                    <h4 style={{marginLeft: 20}}>\r\n                        Table with Paging and Search\r\n                    </h4>\r\n                    <TextField\r\n                        label=\"Search\"\r\n                        style={{marginLeft: 40}}\r\n                        vaule={filterText}\r\n                        onChange={(event) => this.handleChange(\"filterText\", event.target.value)}\r\n                    />\r\n                    <FormControlLabel\r\n                        style={{marginLeft: 10}}\r\n                        control={\r\n                            <Checkbox\r\n                                checked={removeStyling}\r\n                                onChange={() => this.setState({removeStyling: !removeStyling}) }\r\n                                value=\"checkedB\"\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"Remove Styling\"\r\n                    />\r\n                    {selectedUser === null && <span style={{marginTop: 21}} > | Click on a Row</span>}\r\n                    {selectedUser && <span style={{marginTop: 21}}> | Selected {selectedUser.firstName} {selectedUser.lastName}</span>}\r\n                </div>\r\n                <TablePaging loading={loading}\r\n                             dataList={users}\r\n                             headerConfig={headerConfig}\r\n                             filterText={filterText}\r\n                             tableStyleName={removeStyling ? \"\" : \"stripe-table\"}\r\n                             onRowClick = {(user) => this.handleRowClick(user)}\r\n                             //searchFunction={(dataList) => this.searchName(dataList)}\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport const mockUsers = [\r\n    {\r\n        \"id\": 9,\r\n        \"firstName\": \"Cassandra\",\r\n        \"lastName\": \"Andrews\",\r\n        \"location\": { \"city\" : \"Dotsero\" }\r\n    },\r\n    {\r\n        \"id\": 1,\r\n        \"firstName\": \"Lakisha\",\r\n        \"lastName\": \"Alvarez\",\r\n        \"location\": { \"city\" : \"Winfred\" }\r\n    },\r\n    {\r\n        \"id\": 2,\r\n        \"firstName\": \"Kathy\",\r\n        \"lastName\": \"Fox\",\r\n        \"location\": { \"city\" : \"Gorst\"}\r\n    },\r\n    {\r\n        \"id\": 3,\r\n        \"firstName\": \"Cote\",\r\n        \"lastName\": \"Haynes\",\r\n        \"location\": { \"city\" : \"Fairhaven\"}\r\n    },\r\n    {\r\n        \"id\": 4,\r\n        \"firstName\": \"Toni\",\r\n        \"lastName\": \"Rose\",\r\n        \"location\": { \"city\" : \"Leroy\"}\r\n    },\r\n    {\r\n        \"id\": 5,\r\n        \"firstName\": \"Lauren\",\r\n        \"lastName\": \"Clark\",\r\n        \"location\": { \"city\" : \"Marne\"}\r\n    },\r\n    {\r\n        \"id\": 6,\r\n        \"firstName\": \"Mckenzie\",\r\n        \"lastName\": \"Davidson\",\r\n        \"location\": { \"city\" : \"Tetherow\"}\r\n    },\r\n    {\r\n        \"id\": 7,\r\n        \"firstName\": \"Mallory\",\r\n        \"lastName\": \"Roman\",\r\n        \"location\": { \"city\" : \"Sterling\" }\r\n    },\r\n    {\r\n        \"id\": 8,\r\n        \"firstName\": \"Walls\",\r\n        \"lastName\": \"Mack\",\r\n        \"location\": { \"city\" : \"Onton\" }\r\n    },\r\n    {\r\n        \"id\": 0,\r\n        \"firstName\": \"Amie\",\r\n        \"lastName\": \"Shepherd\",\r\n        \"location\": { \"city\" : \"Catherine\"}\r\n    },\r\n    {\r\n        \"id\": 10,\r\n        \"firstName\": \"Jewel\",\r\n        \"lastName\": \"Wise\",\r\n        \"location\": { \"city\" : \"Rutherford\"}\r\n    },\r\n    {\r\n        \"id\": 11,\r\n        \"firstName\": \"Christina\",\r\n        \"lastName\": \"Woodard\",\r\n        \"location\": { \"city\" : \"Websterville\"}\r\n    },\r\n    {\r\n        \"id\": 12,\r\n        \"firstName\": \"Nicole\",\r\n        \"lastName\": \"Tillman\",\r\n        \"location\": { \"city\" : \"Beaulieu\"}\r\n    },\r\n    {\r\n        \"id\": 13,\r\n        \"firstName\": \"Robinson\",\r\n        \"lastName\": \"Larsen\",\r\n        \"location\": { \"city\" : \"Benson\"}\r\n    },\r\n    {\r\n        \"id\": 14,\r\n        \"firstName\": \"Carissa\",\r\n        \"lastName\": \"Hogan\",\r\n        \"location\": { \"city\" : \"Kenwood\" }\r\n    },\r\n    {\r\n        \"id\": 15,\r\n        \"firstName\": \"Garrett\",\r\n        \"lastName\": \"Sutton\",\r\n        \"location\": { \"city\" : \"Torboy\"}\r\n    },\r\n    {\r\n        \"id\": 16,\r\n        \"firstName\": \"Beach\",\r\n        \"lastName\": \"Abbott\",\r\n        \"location\": { \"city\" : \"Ruckersville\"}\r\n    },\r\n    {\r\n        \"id\": 17,\r\n        \"firstName\": \"Lacy\",\r\n        \"lastName\": \"Bird\",\r\n        \"location\": { \"city\" : \"Belleview\"}\r\n    },\r\n    {\r\n        \"id\": 18,\r\n        \"firstName\": \"Misty\",\r\n        \"lastName\": \"Cooley\",\r\n        \"location\": { \"city\" : \"Fowlerville\"}\r\n    }\r\n];","import './index.css'\r\nimport React from 'react'\r\nimport {render} from 'react-dom'\r\nimport {TableDemo} from \"./tables\";\r\n\r\nrender(<TableDemo />, document.querySelector('#app'));\r\n\r\n"],"sourceRoot":""}