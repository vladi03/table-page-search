{"version":3,"sources":["webpack:///./src/tables/extras/SpinnerDownloading.js","webpack:///./src/tables/tableStandard/PaginationStype.js","webpack:///./src/tables/tableStandard/TablePagination.js","webpack:///./src/tables/extras/NoData.js","webpack:///./src/tables/tableStandard/TableSkeletonPaging.js","webpack:///./src/tables/tableStandard/TableHeaderSort.js","webpack:///./src/tables/helpers/pagingCalc.js","webpack:///./src/tables/tableStandard/TablePaging.js","webpack:///./src/tables/index.js","webpack:///./src/index.js"],"names":["SpinnerDownloading","_ref","spinnerSize","style","loading","children","classes","makeStyles","spinnerIcon","width","height","spinnerWrapper","position","margin","fabProgress","color","left","zIndex","useStyles","undefined","react_default","a","createElement","className","_extends","PlayForWork","CircularProgress","size","root","display","marginTop","containerHalfLeft","justifyContent","marginLeft","containerHalfRight","paddingRight","mainText","fontSize","lineHeight","pagingMessageContainer","alignSelf","minHeight","textAlign","marginRight","pagingMessage","formControl","column","flexBasis","pageButtonsContainer","pageButtonsText","pageButtonsIconsText","pageButton","padding","borderRadius","backgroundColor","border","pageButtonEndLeft","borderTopLeftRadius","borderBottomLeftRadius","pageButtonEndRight","borderTopRightRadius","borderBottomRightRadius","TablePagination","pageList","currentPageNum","onPageChange","showPrevButton","showNextButton","allPages","hasPaging","condensed","Typography","FormControl","Select","native","value","onChange","event","parseInt","target","map","pageNum","index","key","IconButton","disabled","onClick","FirstPage","ChevronLeft","page","id","ChevronRight","LastPage","Chip","avatar","Avatar","LibraryBooks","label","ListItemText","TableRow","TableCell","_ref3","dataCount","containerClass","ListItem","_ref4","TableSkeletonPaging","tableHeader","tableRows","paging","tableStyleName","Fragment","Table","TableBody","rows","length","TableSkeletonPaging_ref2","TablePagination_TablePagination","TableSkeletonPaging_extends","TableHeaderSort","headerConfig","sortField","sortDescending","onSetSortField","TableHead","columns","config","fieldForSort","TableSortLabel","active","direction","columnLabel","calcPage","allRows","itemsPerPage","currentPageNumOrLast","result","hasError","errorMessage","errorMessageDetail","calcTotalPages","Math","ceil","pageAllIndex","push","calcLastPageNumber","startPage","calcIndexStart","endPage","pagesToShow","pageIndex","endItemIndex","slice","ex","message","rowCount","sortItems","itemList","isDescending","sort","b","toLowerCase","TablePaging","dataList","filterText","searchFunction","_useState","useState","setSortField","_useState2","setSortDescending","_useState3","setPaging","_useState4","filteredList","setFilteredList","_useState5","lastFilterText","setLastFilterText","filtered","filter","item","Object","values","join","indexOf","TableHeaderSort_TableHeaderSort","newSortField","SpinnerDownloading_SpinnerDownloading","TableSkeletonPaging_TableSkeletonPaging","newPage","row","header","getValue","lastName","firstName","TableDemo","_React$Component","_classCallCheck","this","_this","_possibleConstructorReturn","call","state","users","mockUsers","removeStyling","handleChange","name","_this$setState","setState","timeOut","bind","_inherits","prototype","componentDidMount","setTimeout","searchName","user","render","_this2","_state","TextField","vaule","FormControlLabel","control","Checkbox","checked","TablePaging_TablePaging","React","Component","location","tables_TableDemo","document","querySelector"],"mappings":"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","file":"app.bc2ebf97.js","sourcesContent":["import React from 'react';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport {  PlayForWork as LoadingIcon} from '@material-ui/icons';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles  = (spinnerSize) => makeStyles({\r\n    spinnerIcon: {\r\n        width: spinnerSize, height: spinnerSize\r\n    },\r\n    spinnerWrapper: {\r\n        width: spinnerSize,\r\n        position: 'relative',\r\n        margin: 'auto',\r\n    },\r\n    fabProgress: {\r\n        color: \"primary\",\r\n        position: 'absolute',\r\n        left: 0,\r\n        zIndex: 1,\r\n    },\r\n})();\r\n\r\nexport const SpinnerDownloading = ({spinnerSize, style, loading, children}) => {\r\n    const classes = useStyles(spinnerSize);\r\n\r\n    return (\r\n        (children === undefined || loading) ?\r\n            <div className={classes.spinnerWrapper} style={{...style}}>\r\n                <LoadingIcon color=\"secondary\" className={classes.spinnerIcon} />\r\n                <CircularProgress\r\n                    size={spinnerSize}\r\n                    className={classes.fabProgress}\r\n                />\r\n            </div> :\r\n            children\r\n    );\r\n};","import React from \"react\";\r\nimport { makeStyles  } from '@material-ui/styles';\r\n\r\nexport const useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n        display: \"flex\",\r\n        marginTop: \"10px\",\r\n    },\r\n    containerHalfLeft: {\r\n        width: \"50%\",\r\n        display: \"flex\",\r\n        justifyContent: \"flex-start\",\r\n        marginLeft: \"10px\",\r\n    },\r\n    containerHalfRight: {\r\n        width: \"50%\",\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\",\r\n        paddingRight: 15,\r\n    },\r\n    mainText: {\r\n        fontSize: 15,\r\n        lineHeight: \"36px\",\r\n    },\r\n    pagingMessageContainer: {\r\n        alignSelf: \"flex-start\",\r\n        minHeight: \"36px\",\r\n        textAlign: \"right\",\r\n        marginRight: \"10px\",\r\n    },\r\n    pagingMessage: {\r\n        fontSize: \"14px\",\r\n        lineHeight: \"36px\",\r\n    },\r\n    formControl: {\r\n        fontSize: \"14px\",\r\n    },\r\n    column: {\r\n        flexBasis: '10%',\r\n        minHeight: \"36px\",\r\n    },\r\n    pageButtonsContainer: {\r\n        textAlign: \"center\",\r\n        width: 33,\r\n    },\r\n    pageButtonsText: {\r\n        marginTop: \"-2px\"\r\n    },\r\n    pageButtonsIconsText: {\r\n        marginTop: \"-1px\"\r\n    },\r\n    pageButton: {\r\n        padding: \"8px\",\r\n        lineHeight: \"23px\",\r\n        width:\"33.79px\",\r\n        height: \"34px\",\r\n        fontSize: \"14px\",\r\n        borderRadius: 0,\r\n        backgroundColor: \"white\",\r\n        color: \"blue\",\r\n        border: \"1px solid #ddd\",\r\n    },\r\n    pageButtonEndLeft: {\r\n        padding: \"8px\",\r\n        lineHeight: \"23px\",\r\n        width:\"33.79px\",\r\n        height: \"34px\",\r\n        fontSize: \"14px\",\r\n        borderRadius: 0,\r\n        backgroundColor: \"white\",\r\n        color: \"blue\",\r\n        border: \"1px solid #ddd\",\r\n        borderTopLeftRadius: \"4px\",\r\n        borderBottomLeftRadius: \"4px\",\r\n    },\r\n    pageButtonEndRight: {\r\n        padding: \"8px\",\r\n        lineHeight: \"23px\",\r\n        width:\"33.79px\",\r\n        height: \"34px\",\r\n        fontSize: \"14px\",\r\n        borderRadius: 0,\r\n        backgroundColor: \"white\",\r\n        color: \"blue\",\r\n        border: \"1px solid #ddd\",\r\n        borderTopRightRadius: \"4px\",\r\n        borderBottomRightRadius: \"4px\",\r\n    }\r\n});","import React from \"react\";\r\nimport { Typography, IconButton,FormControl, Select} from '@material-ui/core';\r\nimport { ChevronLeft,FirstPage, ChevronRight, LastPage } from '@material-ui/icons';\r\nimport { useStyles } from \"./PaginationStype\";\r\n\r\nexport const TablePagination = (\r\n    { pageList, pagingMessage, currentPageNum,\r\n      onPageChange, showPrevButton, showNextButton,\r\n      allPages, hasPaging, condensed\r\n    }) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        hasPaging &&\r\n        <div className={classes.root}>\r\n            <div className={classes.containerHalfLeft}>\r\n                <div className={classes.pagingMessageContainer}>\r\n                    <Typography className={classes.pagingMessage}>\r\n                        {condensed ?\r\n                            <span> {pagingMessage} Go to :</span>\r\n                            :\r\n                            <span>Showing {pagingMessage} records,  Go to :</span>\r\n                        }\r\n                    </Typography>\r\n                </div>\r\n                <div className={classes.pagingMessageContainer}>\r\n                    <FormControl>\r\n                        <Select\r\n                            className={classes.formControl}\r\n                            native\r\n                            value={currentPageNum}\r\n                            onChange={(event) => onPageChange(parseInt(event.target.value))}\r\n                        >\r\n                            {allPages.map((pageNum, index) => (<option key={index} value={pageNum}>{pageNum}</option>))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n            </div>\r\n            <div className={classes.containerHalfRight}>\r\n                <div className={classes.pageButtonsContainer}>\r\n                    <IconButton disabled={!showPrevButton} className={classes.pageButtonEndLeft}\r\n                                onClick={() => onPageChange(1)}>\r\n                        <FirstPage className={classes.pageButtonsIconsText} fontSize=\"small\"/>\r\n                    </IconButton>\r\n                </div>\r\n                <div className={classes.pageButtonsContainer}>\r\n                    <IconButton disabled={!showPrevButton} className={classes.pageButton}\r\n                                onClick={() => onPageChange(currentPageNum - 1)}>\r\n                        <ChevronLeft className={classes.pageButtonsIconsText} fontSize=\"small\"/>\r\n                    </IconButton>\r\n                </div>\r\n                {pageList.map((page, index) => (\r\n                    <div key={index} className={classes.pageButtonsContainer}>\r\n                        <IconButton className={classes.pageButton}\r\n                                    onClick={() => onPageChange(page)}\r\n                                    id={`pageNumButton-${index}`}\r\n                                    color=\"primary\"\r\n                                    style={{\r\n                                        backgroundColor: page === currentPageNum ? \"#428bca\" : \"\",\r\n                                        color: page === currentPageNum ? \"white\" : \"\"\r\n                                    }}\r\n                        >\r\n                            <span className={classes.pageButtonsText}>{page}</span>\r\n                        </IconButton>\r\n                    </div>))}\r\n                <div className={classes.pageButtonsContainer}>\r\n                    <IconButton disabled={!showNextButton} className={classes.pageButton}\r\n                                onClick={() => onPageChange(currentPageNum + 1)}>\r\n                        <ChevronRight className={classes.pageButtonsIconsText} fontSize=\"small\"/>\r\n                    </IconButton>\r\n                </div>\r\n                <div className={classes.pageButtonsContainer}>\r\n                    <IconButton disabled={!showNextButton} className={classes.pageButtonEndRight}\r\n                                onClick={() => onPageChange(true)}>\r\n                        <LastPage className={classes.pageButtonsIconsText} fontSize=\"small\"/>\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import React from \"react\";\r\nimport { Chip, Avatar, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { LibraryBooks } from \"@material-ui/icons\";\r\n\r\n// noinspection JSUnusedGlobalSymbols\r\nexport const NoData = ({dataCount, children})=> (\r\n    dataCount === 0 &&\r\n    <Chip\r\n        avatar={\r\n            <Avatar>\r\n                <LibraryBooks />\r\n            </Avatar>\r\n        }\r\n        label=\"No Data\"\r\n    />\r\n    || children\r\n);\r\n\r\nexport const ListNoData = ({dataCount, containerClass, className, children})=> (\r\n    <div className={containerClass}>\r\n        {dataCount === 0 &&\r\n        <ListItem className={className}>\r\n            <ListItemText>\r\n                <Chip\r\n                    avatar={\r\n                        <Avatar>\r\n                            <LibraryBooks />\r\n                        </Avatar>\r\n                    }\r\n                    label=\"No Data\"\r\n                />\r\n            </ListItemText>\r\n        </ListItem>\r\n        || children\r\n        }\r\n    </div>\r\n);","import React from \"react\";\r\nimport { Table, TableBody, TableRow, TableCell } from '@material-ui/core';\r\nimport { TablePagination } from \"./TablePagination\";\r\nimport {ListNoData} from \"../extras/NoData\";\r\n\r\nexport const TableSkeletonPaging = ({tableHeader, tableRows, paging, tableStyleName, onPageChange, condensed}) => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Table className={tableStyleName}>\r\n                {tableHeader}\r\n                <TableBody>\r\n                    {paging.rows.map(tableRows)}\r\n                    {paging.rows.length === 0 &&\r\n                    <TableRow>\r\n                        <TableCell>\r\n                            <ListNoData dataCount={0} />\r\n                        </TableCell>\r\n                    </TableRow>\r\n                    }\r\n                </TableBody>\r\n            </Table>\r\n\r\n            <TablePagination {...paging} onPageChange={onPageChange} condensed={condensed} />\r\n        </React.Fragment>\r\n    );\r\n};","import React from \"react\";\r\nimport { TableHead, TableRow, TableCell, TableSortLabel } from '@material-ui/core';\r\n\r\nexport const TableHeaderSort = ({headerConfig, sortField, sortDescending, onSetSortField})=>(\r\n    <TableHead>\r\n        <TableRow>\r\n            {headerConfig.columns.map((config, index) => (\r\n                <TableCell key={index} className={sortField === config.fieldForSort ? \"sorted\" : \"\"}>\r\n                    {config.fieldForSort ?\r\n                        <TableSortLabel\r\n                            active={sortField === config.fieldForSort}\r\n                            direction={sortDescending ? \"desc\" : \"asc\"}\r\n                            onClick={() => onSetSortField(config.fieldForSort)}\r\n                        >\r\n                            {config.columnLabel}\r\n                        </TableSortLabel>\r\n                        :\r\n                        <span>{config.columnLabel}</span>\r\n                    }\r\n                </TableCell>\r\n            )) }\r\n        </TableRow>\r\n    </TableHead>\r\n);","\r\nexport const calcPage = (allRows,  itemsPerPage, currentPageNumOrLast, ) => {\r\n    const result = {\r\n        rows: [],\r\n        pageList: [],\r\n        allPages: [],\r\n        pagingMessage: \"No Records\",\r\n        hasError: false,\r\n        errorMessage: \"\",\r\n        errorMessageDetail: \"\",\r\n        hasPaging: true,\r\n        showPrevButton: true,\r\n        showNextButton: true,\r\n        currentPageNum: currentPageNumOrLast\r\n    };\r\n\r\n    try {\r\n        const pagesToShow = 4;\r\n        const calcTotalPages = Math.ceil(allRows.length / itemsPerPage);\r\n        for(let pageAllIndex = 1; pageAllIndex <= calcTotalPages; pageAllIndex++)\r\n            result.allPages.push(pageAllIndex);\r\n\r\n        result.hasPaging = calcTotalPages > 1;\r\n        const currentPageNum = currentPageNumOrLast === true ? calcLastPageNumber(allRows.length, itemsPerPage) : currentPageNumOrLast;\r\n        result.currentPageNum = currentPageNum;\r\n        let startPage = currentPageNum > 2 ? currentPageNum - 1 : 1;\r\n\r\n        let calcIndexStart = 0;\r\n        //if the page number exceeds the total number of pages or is less than zero go to page 1\r\n        if(currentPageNum <= calcTotalPages && currentPageNum > 0)\r\n            calcIndexStart = (currentPageNum -1 ) * itemsPerPage;\r\n        else {\r\n            startPage = 1;\r\n            result.currentPageNum = 1;\r\n        }\r\n\r\n        let endPage = (startPage + pagesToShow - 1) < calcTotalPages ? startPage + pagesToShow - 1 : calcTotalPages;\r\n        //check to make sure we have the correct number of pages showing.\r\n        if((endPage - startPage) < pagesToShow -1 && allRows.length > 0 && endPage >= pagesToShow) {\r\n            startPage = endPage - pagesToShow + 1;\r\n        }\r\n\r\n        if(startPage < 0) startPage =1;\r\n\r\n        for (let pageIndex = startPage; pageIndex <= endPage; pageIndex++) {\r\n            result.pageList.push(pageIndex);\r\n        }\r\n\r\n        const endItemIndex = (calcIndexStart + itemsPerPage) < allRows.length ? (calcIndexStart + itemsPerPage) : allRows.length;\r\n        result.pagingMessage = allRows.length > 0 ? `${calcIndexStart + 1}-${endItemIndex} of ${allRows.length}`: \"No Data\";\r\n\r\n        result.rows = allRows.slice(calcIndexStart, endItemIndex);\r\n        result.showPrevButton = result.currentPageNum > 1;\r\n        result.showNextButton = result.currentPageNum < calcTotalPages;\r\n    } catch (ex) {\r\n        result.hasError = true;\r\n        result.pagingMessage = \"ERROR\";\r\n        result.errorMessage = \"Invalid input when creating table paging\";\r\n        result.errorMessageDetail = ex.message || ex;\r\n        result.currentPageNum = 0;\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const calcLastPageNumber = (rowCount, itemsPerPage) => {\r\n    return Math.ceil(rowCount / itemsPerPage);\r\n};\r\n\r\nexport const sortItems = (itemList, sortField, isDescending) => {\r\n    itemList.sort((a, b) => {\r\n        if (a[sortField].toLowerCase() < b[sortField].toLowerCase())\r\n            return isDescending ? 1 : -1;\r\n        if (a[sortField].toLowerCase() > b[sortField].toLowerCase())\r\n            return isDescending ? -1 : 1;\r\n        return 0;\r\n    });\r\n};\r\n","import React, {useState} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {SpinnerDownloading} from \"../extras/SpinnerDownloading\";\r\nimport {TableSkeletonPaging} from \"./TableSkeletonPaging\";\r\nimport {TableRow ,TableCell} from \"@material-ui/core\";\r\nimport { TableHeaderSort } from \"./TableHeaderSort\";\r\nimport {calcPage, sortItems} from \"../helpers/pagingCalc\";\r\n\r\nexport const TablePaging = ({loading, dataList, headerConfig, filterText, tableStyleName,\r\n                                searchFunction}) => {\r\n    const itemsPerPage = 10;\r\n    const [sortField, setSortField]= useState(headerConfig.columns[0].fieldForSort);\r\n    const [sortDescending, setSortDescending]= useState(false);\r\n    const [paging, setPaging] = useState(() => {\r\n        sortItems(dataList, headerConfig.columns[0].fieldForSort, false);\r\n        return calcPage(dataList,10, 1);\r\n    });\r\n    const [filteredList, setFilteredList ] = useState(dataList);\r\n    const [lastFilterText, setLastFilterText ] = useState(\"\");\r\n\r\n    if((filterText || filterText === \"\" ) && filterText !== lastFilterText) {\r\n        const filtered = searchFunction ? searchFunction(dataList) : dataList.filter((item) =>\r\n            Object.values(item).join().toLowerCase().indexOf(filterText.toLowerCase()) > -1 );\r\n\r\n        sortItems(filtered, sortField, sortDescending);\r\n        setFilteredList(filtered);\r\n        setLastFilterText(filterText);\r\n        setPaging(calcPage(filtered,10, 1));\r\n    }\r\n\r\n    const onSetSortField = (newSortField) => {\r\n        const isDescending = newSortField === sortField && !sortDescending;\r\n        sortItems(filteredList, newSortField, isDescending);\r\n        setSortDescending(isDescending);\r\n        setSortField(newSortField);\r\n        setPaging(calcPage(filteredList, itemsPerPage, 1));\r\n    };\r\n\r\n    const onPageChange = (newPage) => {\r\n        setPaging(calcPage(filteredList, itemsPerPage, newPage));\r\n    };\r\n\r\n    const tableHeader =(\r\n        <TableHeaderSort headerConfig={headerConfig}\r\n                         sortField={sortField}\r\n                         sortDescending={sortDescending}\r\n                         onSetSortField={onSetSortField}\r\n        />);\r\n\r\n    return (\r\n        <SpinnerDownloading spinnerSize={50} loading={loading}>\r\n            <TableSkeletonPaging\r\n                paging={paging}\r\n                tableRows={tableRows(headerConfig)}\r\n                tableHeader={tableHeader}\r\n                condensed={false}\r\n                onPageChange={onPageChange}\r\n                tableStyleName={tableStyleName}\r\n            />\r\n        </SpinnerDownloading>\r\n    )\r\n};\r\n\r\nTablePaging.propTypes = {\r\n    loading: PropTypes.bool,\r\n    dataList: PropTypes.array.isRequired,\r\n    headerConfig: PropTypes.object.isRequired,\r\n    filterText: PropTypes.string,\r\n    tableStyleName: PropTypes.string,\r\n    searchFunction: PropTypes.func\r\n};\r\n\r\nexport const tableRows = (headerConfig) => {\r\n    const getValue = (row, header) => header.display && header.display(row)\r\n                                || row[header.fieldForSort];\r\n\r\n    return (row, index) => (\r\n        <TableRow key={index} style={{height: 39}}>\r\n            {headerConfig.columns.map((header, index) => (\r\n                <TableCell key={index} style={{fontSize: \"14px\"}} >\r\n                    <span>{getValue(row, header)}</span>\r\n                </TableCell>\r\n            ))}\r\n        </TableRow>\r\n    );\r\n};","import React from \"react\";\r\nimport {TextField, FormControlLabel, Checkbox} from \"@material-ui/core\"\r\nimport {TablePaging} from \"./tableStandard/TablePaging\";\r\nexport {TableSkeletonPaging} from \"./tableStandard/TableSkeletonPaging\";\r\n\r\nexport const headerConfig = { columns: [\r\n        { fieldForSort: \"firstName\", columnLabel: \"Name First\" },\r\n        { fieldForSort: \"lastName\", columnLabel: \"Name Last\" },\r\n        { fieldForSort: \"location\", columnLabel: \"Location\" },\r\n        { display: (row)=> `${row.lastName}, ${row.firstName}`, columnLabel: \"Full Name\" }\r\n    ]\r\n};\r\n\r\nexport {TablePaging};\r\n\r\nexport class TableDemo extends React.Component {\r\n    state = {\r\n        loading: true,\r\n        users: mockUsers,\r\n        filterText: \"\",\r\n        removeStyling: true\r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n        this.timeOut = this.timeOut.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        setTimeout(this.timeOut, 2000);\r\n    }\r\n\r\n    searchName(itemList) {\r\n        const {filterText} = this.state;\r\n        return itemList.filter((user) => {\r\n            return user.firstName.toLowerCase().indexOf(filterText.toLowerCase()) > -1;\r\n        });\r\n    };\r\n\r\n    timeOut() {\r\n        // noinspection JSCheckFunctionSignatures\r\n        this.setState({loading:false});\r\n    }\r\n\r\n    handleChange = (name, value) => {\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    render() {\r\n        const {loading, users, filterText, removeStyling} = this.state;\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <div style={{display:\"flex\"}}>\r\n                    <h4 style={{marginLeft: 20}}>\r\n                        Table with paging and search\r\n                    </h4>\r\n                    <TextField\r\n                        label=\"Search\"\r\n                        style={{marginLeft: 40}}\r\n                        vaule={filterText}\r\n                        onChange={(event) => this.handleChange(\"filterText\", event.target.value)}\r\n                    />\r\n                    <FormControlLabel\r\n                        style={{marginLeft: 10}}\r\n                        control={\r\n                            <Checkbox\r\n                                checked={removeStyling}\r\n                                onChange={() => this.setState({removeStyling: !removeStyling}) }\r\n                                value=\"checkedB\"\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"Remove Styling\"\r\n                    />\r\n                </div>\r\n                <TablePaging loading={loading}\r\n                             dataList={users}\r\n                             headerConfig={headerConfig}\r\n                             filterText={filterText}\r\n                             tableStyleName={removeStyling ? \"\" : \"stripe-table\"}\r\n                             //searchFunction={(dataList) => this.searchName(dataList)}\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport const mockUsers = [\r\n    {\r\n        \"id\": 0,\r\n        \"firstName\": \"Cassandra\",\r\n        \"lastName\": \"Andrews\",\r\n        \"location\": \"Dotsero\"\r\n    },\r\n    {\r\n        \"id\": 1,\r\n        \"firstName\": \"Lakisha\",\r\n        \"lastName\": \"Alvarez\",\r\n        \"location\": \"Winfred\"\r\n    },\r\n    {\r\n        \"id\": 2,\r\n        \"firstName\": \"Kathy\",\r\n        \"lastName\": \"Fox\",\r\n        \"location\": \"Gorst\"\r\n    },\r\n    {\r\n        \"id\": 3,\r\n        \"firstName\": \"Cote\",\r\n        \"lastName\": \"Haynes\",\r\n        \"location\": \"Fairhaven\"\r\n    },\r\n    {\r\n        \"id\": 4,\r\n        \"firstName\": \"Toni\",\r\n        \"lastName\": \"Rose\",\r\n        \"location\": \"Leroy\"\r\n    },\r\n    {\r\n        \"id\": 5,\r\n        \"firstName\": \"Lauren\",\r\n        \"lastName\": \"Clark\",\r\n        \"location\": \"Marne\"\r\n    },\r\n    {\r\n        \"id\": 6,\r\n        \"firstName\": \"Mckenzie\",\r\n        \"lastName\": \"Davidson\",\r\n        \"location\": \"Tetherow\"\r\n    },\r\n    {\r\n        \"id\": 7,\r\n        \"firstName\": \"Mallory\",\r\n        \"lastName\": \"Roman\",\r\n        \"location\": \"Sterling\"\r\n    },\r\n    {\r\n        \"id\": 8,\r\n        \"firstName\": \"Walls\",\r\n        \"lastName\": \"Mack\",\r\n        \"location\": \"Onton\"\r\n    },\r\n    {\r\n        \"id\": 9,\r\n        \"firstName\": \"Amie\",\r\n        \"lastName\": \"Shepherd\",\r\n        \"location\": \"Catherine\"\r\n    },\r\n    {\r\n        \"id\": 10,\r\n        \"firstName\": \"Jewel\",\r\n        \"lastName\": \"Wise\",\r\n        \"location\": \"Rutherford\"\r\n    },\r\n    {\r\n        \"id\": 11,\r\n        \"firstName\": \"Christina\",\r\n        \"lastName\": \"Woodard\",\r\n        \"location\": \"Websterville\"\r\n    },\r\n    {\r\n        \"id\": 12,\r\n        \"firstName\": \"Nicole\",\r\n        \"lastName\": \"Tillman\",\r\n        \"location\": \"Beaulieu\"\r\n    },\r\n    {\r\n        \"id\": 13,\r\n        \"firstName\": \"Robinson\",\r\n        \"lastName\": \"Larsen\",\r\n        \"location\": \"Benson\"\r\n    },\r\n    {\r\n        \"id\": 14,\r\n        \"firstName\": \"Carissa\",\r\n        \"lastName\": \"Hogan\",\r\n        \"location\": \"Kenwood\"\r\n    },\r\n    {\r\n        \"id\": 15,\r\n        \"firstName\": \"Garrett\",\r\n        \"lastName\": \"Sutton\",\r\n        \"location\": \"Torboy\"\r\n    },\r\n    {\r\n        \"id\": 16,\r\n        \"firstName\": \"Beach\",\r\n        \"lastName\": \"Abbott\",\r\n        \"location\": \"Ruckersville\"\r\n    },\r\n    {\r\n        \"id\": 17,\r\n        \"firstName\": \"Lacy\",\r\n        \"lastName\": \"Bird\",\r\n        \"location\": \"Belleview\"\r\n    },\r\n    {\r\n        \"id\": 18,\r\n        \"firstName\": \"Misty\",\r\n        \"lastName\": \"Cooley\",\r\n        \"location\": \"Fowlerville\"\r\n    }\r\n];","import './index.css'\nimport React from 'react'\nimport {render} from 'react-dom'\nimport {TableDemo} from \"./tables\";\n\nrender(<TableDemo />, document.querySelector('#app'));\n\n"],"sourceRoot":""}