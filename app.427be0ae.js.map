{"version":3,"sources":["webpack:///./src/tables/extras/SpinnerDownloading.js","webpack:///./src/tables/tableStandard/PaginationStype.js","webpack:///./src/tables/tableStandard/TablePagination.js","webpack:///./src/tables/extras/NoData.js","webpack:///./src/tables/tableStandard/TableSkeletonPaging.js","webpack:///./src/tables/tableStandard/TableHeaderSort.js","webpack:///./src/tables/helpers/objectValue.js","webpack:///./src/tables/tableStandard/TablePaging.js","webpack:///./src/tables/helpers/pagingCalc.js","webpack:///./src/tables/index.js","webpack:///./src/index.js"],"names":["SpinnerDownloading","spinnerSize","style","loading","children","classes","makeStyles","spinnerIcon","width","height","spinnerWrapper","position","margin","fabProgress","color","left","zIndex","useStyles","undefined","className","CircularProgress","size","root","display","marginTop","containerHalfLeft","justifyContent","marginLeft","containerHalfRight","paddingRight","mainText","fontSize","lineHeight","pagingMessageContainer","alignSelf","minHeight","textAlign","marginRight","pagingMessage","formControl","column","flexBasis","pageButtonsContainer","pageButtonsText","pageButtonsIconsText","pageButton","padding","borderRadius","backgroundColor","border","pageButtonEndLeft","borderTopLeftRadius","borderBottomLeftRadius","pageButtonEndRight","borderTopRightRadius","borderBottomRightRadius","TablePagination","pageList","currentPageNum","onPageChange","showPrevButton","showNextButton","allPages","hasPaging","condensed","Typography","FormControl","Select","native","value","onChange","event","parseInt","target","map","pageNum","index","key","IconButton","disabled","onClick","page","id","Chip","Avatar","ListItemText","avatar","label","ListNoData","dataCount","containerClass","ListItem","TableRow","TableCell","TableSkeletonPaging","tableHeader","tableRows","paging","tableStyleName","useMaterialUiPaging","Fragment","Table","TableBody","rows","length","rowsPerPageOptions","component","rowsPerPage","itemsPerPage","count","totalRows","onChangePage","onChangeRowsPerPage","pages","TableHeaderSort","headerConfig","sortField","sortDescending","onSetSortField","TableHead","columns","config","headerCellStyle","fieldForSort","TableSortLabel","active","direction","columnLabel","getObjectValue","targetObject","fieldName","childFields","split","propValue","TablePaging","dataList","filterText","searchFunction","onRowClick","onServerSidePaging","totalRecordsFromServer","restPageNumber","useState","setItemsPerPage","defaultSort","setSortField","setSortDescending","activePage","setActivePage","filterTextLower","toLowerCase","useEffect","filteredList","filter","item","getObjectJoin","Object","values","join","indexOf","itemList","isDescending","sort","aIn","bIn","aValue","bValue","sortItems","allRows","currentPageNumOrLast","totalRecordFromServer","result","hasError","errorMessage","errorMessageDetail","calcTotalRecordCount","calcTotalPages","Math","ceil","pageAllIndex","push","startPage","calcIndexStart","endPage","pagesToShow","pageIndex","endItemIndex","slice","ex","message","calcPage","newSortField","newPage","newItemsPerPage","onItemClick","selectedRowId","setSelectedRowId","warningWasShown","onSelectRow","row","hasClick","rowWithClick","rowWithoutClick","header","disableCellClick","cellWithClick","cellStyle","hasValue","console","warn","getValue","cursor","hideWhenCondensed","lastName","firstName","TableDemo","users","mockUsers","removeStyling","selectedUser","name","setState","user","componentDidMount","setTimeout","timeOut","searchName","this","state","render","TextField","vaule","handleChange","FormControlLabel","control","Checkbox","checked","handleRowClick","React","Component","document","querySelector"],"mappings":"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","file":"app.427be0ae.js","sourcesContent":["import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport LoadingIcon from '@material-ui/icons/PlayForWork';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles  = (spinnerSize) => makeStyles({\n    spinnerIcon: {\n        width: spinnerSize, height: spinnerSize\n    },\n    spinnerWrapper: {\n        width: spinnerSize,\n        position: 'relative',\n        margin: 'auto',\n    },\n    fabProgress: {\n        color: \"primary\",\n        position: 'absolute',\n        left: 0,\n        zIndex: 1,\n    },\n})();\n\nexport const SpinnerDownloading = ({spinnerSize, style, loading, children}) => {\n    const classes = useStyles(spinnerSize);\n\n    return (\n        (children === undefined || loading) ?\n            <div className={classes.spinnerWrapper} style={{...style}}>\n                <LoadingIcon color=\"secondary\" className={classes.spinnerIcon} />\n                <CircularProgress\n                    size={spinnerSize}\n                    className={classes.fabProgress}\n                />\n            </div> :\n            children\n    );\n};","import React from \"react\";\nimport { makeStyles  } from '@material-ui/styles';\n\nexport const useStyles = makeStyles({\n    root: {\n        width: '100%',\n        display: \"flex\",\n        marginTop: \"10px\",\n    },\n    containerHalfLeft: {\n        width: \"50%\",\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        marginLeft: \"10px\",\n    },\n    containerHalfRight: {\n        width: \"50%\",\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        paddingRight: 15,\n    },\n    mainText: {\n        fontSize: 15,\n        lineHeight: \"36px\",\n    },\n    pagingMessageContainer: {\n        alignSelf: \"flex-start\",\n        minHeight: \"36px\",\n        textAlign: \"right\",\n        marginRight: \"10px\",\n    },\n    pagingMessage: {\n        fontSize: \"14px\",\n        lineHeight: \"36px\",\n    },\n    formControl: {\n        fontSize: \"14px\",\n    },\n    column: {\n        flexBasis: '10%',\n        minHeight: \"36px\",\n    },\n    pageButtonsContainer: {\n        textAlign: \"center\",\n        width: 33,\n    },\n    pageButtonsText: {\n        marginTop: \"-2px\"\n    },\n    pageButtonsIconsText: {\n        marginTop: \"-1px\"\n    },\n    pageButton: {\n        padding: \"8px\",\n        lineHeight: \"23px\",\n        width:\"33.79px\",\n        height: \"34px\",\n        fontSize: \"14px\",\n        borderRadius: 0,\n        backgroundColor: \"white\",\n        color: \"blue\",\n        border: \"1px solid #ddd\",\n    },\n    pageButtonEndLeft: {\n        padding: \"8px\",\n        lineHeight: \"23px\",\n        width:\"33.79px\",\n        height: \"34px\",\n        fontSize: \"14px\",\n        borderRadius: 0,\n        backgroundColor: \"white\",\n        color: \"blue\",\n        border: \"1px solid #ddd\",\n        borderTopLeftRadius: \"4px\",\n        borderBottomLeftRadius: \"4px\",\n    },\n    pageButtonEndRight: {\n        padding: \"8px\",\n        lineHeight: \"23px\",\n        width:\"33.79px\",\n        height: \"34px\",\n        fontSize: \"14px\",\n        borderRadius: 0,\n        backgroundColor: \"white\",\n        color: \"blue\",\n        border: \"1px solid #ddd\",\n        borderTopRightRadius: \"4px\",\n        borderBottomRightRadius: \"4px\",\n    }\n});","import React from \"react\";\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport LastPage from '@material-ui/icons/LastPage';\n\nimport { useStyles } from \"./PaginationStype\";\n\nexport const TablePagination = (\n    { pageList, pagingMessage, currentPageNum,\n      onPageChange, showPrevButton, showNextButton,\n      allPages, hasPaging, condensed\n    }) => {\n\n    const classes = useStyles();\n\n    return (\n        hasPaging &&\n        <div className={classes.root}>\n            <div className={classes.containerHalfLeft}>\n                <div className={classes.pagingMessageContainer}>\n                    <Typography className={classes.pagingMessage}>\n                        {condensed ?\n                            <span> {pagingMessage} Go to :</span>\n                            :\n                            <span>Showing {pagingMessage} records,  Go to :</span>\n                        }\n                    </Typography>\n                </div>\n                <div className={classes.pagingMessageContainer}>\n                    <FormControl>\n                        <Select\n                            className={classes.formControl}\n                            native\n                            value={currentPageNum}\n                            onChange={(event) => onPageChange(parseInt(event.target.value))}\n                        >\n                            {allPages.map((pageNum, index) => (<option key={index} value={pageNum}>{pageNum}</option>))}\n                        </Select>\n                    </FormControl>\n                </div>\n            </div>\n            <div className={classes.containerHalfRight}>\n                <div className={classes.pageButtonsContainer}>\n                    <IconButton disabled={!showPrevButton} className={classes.pageButtonEndLeft}\n                                onClick={() => onPageChange(1)}>\n                        <FirstPage className={classes.pageButtonsIconsText} fontSize=\"small\"/>\n                    </IconButton>\n                </div>\n                <div className={classes.pageButtonsContainer}>\n                    <IconButton disabled={!showPrevButton} className={classes.pageButton}\n                                onClick={() => onPageChange(currentPageNum - 1)}>\n                        <ChevronLeft className={classes.pageButtonsIconsText} fontSize=\"small\"/>\n                    </IconButton>\n                </div>\n                {pageList.map((page, index) => (\n                    <div key={index} className={classes.pageButtonsContainer}>\n                        <IconButton className={classes.pageButton}\n                                    onClick={() => onPageChange(page)}\n                                    id={`pageNumButton-${index}`}\n                                    color=\"primary\"\n                                    style={{\n                                        backgroundColor: page === currentPageNum ? \"#428bca\" : \"\",\n                                        color: page === currentPageNum ? \"white\" : \"\"\n                                    }}\n                        >\n                            <span className={classes.pageButtonsText}>{page}</span>\n                        </IconButton>\n                    </div>))}\n                <div className={classes.pageButtonsContainer}>\n                    <IconButton disabled={!showNextButton} className={classes.pageButton}\n                                onClick={() => onPageChange(currentPageNum + 1)}>\n                        <ChevronRight className={classes.pageButtonsIconsText} fontSize=\"small\"/>\n                    </IconButton>\n                </div>\n                <div className={classes.pageButtonsContainer}>\n                    <IconButton disabled={!showNextButton} className={classes.pageButtonEndRight}\n                                onClick={() => onPageChange(true)}>\n                        <LastPage className={classes.pageButtonsIconsText} fontSize=\"small\"/>\n                    </IconButton>\n                </div>\n            </div>\n        </div>\n    );\n};","import React from \"react\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport LibraryBooks from \"@material-ui/icons/LibraryBooks\";\n\n// noinspection JSUnusedGlobalSymbols\nexport const NoData = ({dataCount, children})=> (\n    dataCount === 0 &&\n    <Chip\n        avatar={\n            <Avatar>\n                <LibraryBooks />\n            </Avatar>\n        }\n        label=\"No Data\"\n    />\n    || children\n);\n\nexport const ListNoData = ({dataCount, containerClass, className, children})=> (\n    <div className={containerClass}>\n        {dataCount === 0 &&\n        <ListItem className={className}>\n            <ListItemText>\n                <Chip\n                    avatar={\n                        <Avatar>\n                            <LibraryBooks />\n                        </Avatar>\n                    }\n                    label=\"No Data\"\n                />\n            </ListItemText>\n        </ListItem>\n        || children\n        }\n    </div>\n);","import React from \"react\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport Pagination from \"@material-ui/core/TablePagination\";\nimport { TablePagination } from \"./TablePagination\";\nimport {ListNoData} from \"../extras/NoData\";\n\nexport const TableSkeletonPaging = ({tableHeader, tableRows, paging, tableStyleName, onPageChange, condensed, useMaterialUiPaging}) => {\n\n    return (\n        <React.Fragment>\n            <Table className={tableStyleName}>\n                {tableHeader}\n                <TableBody>\n                    {paging.rows.map(tableRows)}\n                    {paging.rows.length === 0 &&\n                    <TableRow>\n                        <TableCell>\n                            <ListNoData dataCount={0} />\n                        </TableCell>\n                    </TableRow>\n                    }\n                </TableBody>\n            </Table>\n\n            {useMaterialUiPaging ?\n                <Pagination\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component=\"div\"\n                    rowsPerPage={paging.itemsPerPage}\n                    page={paging.currentPageNum - 1}\n                    count={paging.totalRows}\n                    onChangePage={(event, page) => {\n                        onPageChange(page + 1);\n                    }}\n                    onChangeRowsPerPage={(event) => {\n                        const pages = parseInt(event.target.value, 10);\n                        onPageChange(1, pages);\n                    }}\n                /> :\n                <TablePagination {...paging} onPageChange={onPageChange} condensed={condensed}/>\n            }\n        </React.Fragment>\n    );\n};","import React from \"react\";\n\nimport TableHead from '@material-ui/core/TableHead';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport TableRow from '@material-ui/core/TableRow';\n\nexport const TableHeaderSort = ({headerConfig, sortField, sortDescending, onSetSortField})=>(\n    <TableHead>\n        <TableRow>\n            {headerConfig.columns.map((config, index) => (\n                <TableCell key={index}\n                           style={config.headerCellStyle}\n                           className={sortField === config.fieldForSort ? \"sorted\" : \"\"}>\n                    {config.fieldForSort ?\n                        <TableSortLabel\n                            active={sortField === config.fieldForSort}\n                            direction={sortDescending ? \"desc\" : \"asc\"}\n                            onClick={() => onSetSortField(config.fieldForSort)}\n                        >\n                            {config.columnLabel}\n                        </TableSortLabel>\n                        :\n                        <span>{config.columnLabel}</span>\n                    }\n                </TableCell>\n            )) }\n        </TableRow>\n    </TableHead>\n);","\nexport const getObjectValue = (targetObject, fieldName) => {\n    if(fieldName) {\n        const childFields = fieldName.split('.');\n        //get to the property value by iterating through the object structure\n        let propValue = targetObject;\n        for (let index in childFields) {\n            // noinspection JSUnfilteredForInLoop\n            propValue = propValue[childFields[index]];\n        }\n        return propValue === undefined || propValue === null ? \"\" : propValue;\n    } else return targetObject === undefined || targetObject === null ? \"\" : targetObject;\n};\n\nexport const getObjectJoin = (targetObject) => {\n    return targetObject &&\n        (Object.values(targetObject).map((item) => typeof(item) === \"object\" ? getObjectJoin(item) : item).join()) || \"\";\n};","import React, {useState, useEffect} from \"react\";\nimport PropTypes from 'prop-types';\nimport {SpinnerDownloading} from \"../extras/SpinnerDownloading\";\nimport {TableSkeletonPaging} from \"./TableSkeletonPaging\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nimport { TableHeaderSort } from \"./TableHeaderSort\";\nimport {calcPage, sortItems} from \"../helpers/pagingCalc\";\nimport {getObjectValue, getObjectJoin} from \"../helpers/objectValue\";\n\nexport const TablePaging = ({loading, dataList, headerConfig, filterText, tableStyleName,\n                                searchFunction, onRowClick, condensed, onServerSidePaging,\n                                totalRecordsFromServer, restPageNumber, useMaterialUiPaging\n                            }) => {\n    const [itemsPerPage, setItemsPerPage] = useState(headerConfig.itemsPerPage || 10);\n    const [sortField, setSortField]= useState(headerConfig.defaultSort || headerConfig.columns[0].fieldForSort);\n    const [sortDescending, setSortDescending]= useState(headerConfig.sortDescending || false);\n    const [activePage, setActivePage] = useState(1);\n    const filterTextLower  = filterText && filterText.toLowerCase();\n\n    useEffect(() => {\n        if(restPageNumber > 0)\n            setActivePage(restPageNumber);\n    }, [restPageNumber]);\n\n    let filteredList = [];\n    if(filterText && filterText.length > 0) {\n        filteredList = searchFunction ? searchFunction(dataList) : dataList.filter((item) => {\n            return item && getObjectJoin(item).toLowerCase().indexOf(filterTextLower) > -1;//.indexOf(filterText.toLowerCase()) > -1;\n        });\n    } else {\n        filteredList = [...dataList];\n    }\n\n\n    const onSetSortField = (newSortField) => {\n        const isDescending = newSortField === sortField && !sortDescending;\n        setSortDescending(isDescending);\n        setSortField(newSortField);\n        if(onServerSidePaging)\n            onServerSidePaging({\n                sortField: newSortField,\n                sortDescending: isDescending,\n                itemsPerPage, activePage\n            });\n    };\n\n    const onPageChange = (newPage, newItemsPerPage) => {\n        setActivePage(newPage);\n        if(newItemsPerPage > 0)\n            setItemsPerPage(newItemsPerPage);\n\n        if(onServerSidePaging)\n            onServerSidePaging({\n                sortField,\n                sortDescending,\n                itemsPerPage,\n                activePage : newPage\n            });\n    };\n\n    if(!onServerSidePaging)\n        sortItems(filteredList, sortField, sortDescending);\n    const paging = calcPage(filteredList, itemsPerPage, activePage, totalRecordsFromServer);\n\n    const tableHeader =(\n        <TableHeaderSort headerConfig={headerConfig}\n                         sortField={sortField}\n                         sortDescending={sortDescending}\n                         onSetSortField={onSetSortField}\n        />);\n\n    return (\n        <SpinnerDownloading spinnerSize={50} loading={loading}>\n            <TableSkeletonPaging\n                paging={paging}\n                tableRows={tableRows(headerConfig, onRowClick)}\n                tableHeader={tableHeader}\n                condensed={condensed}\n                onPageChange={onPageChange}\n                tableStyleName={tableStyleName}\n                useMaterialUiPaging={useMaterialUiPaging  || false}\n            />\n        </SpinnerDownloading>\n    )\n};\n\nTablePaging.propTypes = {\n    loading: PropTypes.bool,\n    dataList: PropTypes.array.isRequired,\n    headerConfig: PropTypes.object.isRequired,\n    filterText: PropTypes.string,\n    tableStyleName: PropTypes.string,\n    searchFunction: PropTypes.func,\n    onRowClick: PropTypes.func,\n    condensed: PropTypes.bool,\n};\n\nexport const tableRows = (headerConfig, onItemClick) => {\n    const classes = useStyles();\n    const [selectedRowId, setSelectedRowId ] = useState(null);\n    let warningWasShown = false;\n\n    const getValue = (row, header, onSelectRow) => {\n        const hasValue = !!(header.display || header.fieldForSort);\n\n        if(!(warningWasShown || hasValue)) {\n            console.warn(`Column \"${header.columnLabel}\" must have a \"display\" or \"fieldSort\" field`);\n            warningWasShown = true;\n        }\n\n        return hasValue ? header.display ? header.display(row, header, onSelectRow) :\n            (header.fieldForSort !== undefined && getObjectValue(row, header.fieldForSort))\n            : \"\";\n    };\n\n    const onSelectRow = (row)=> {\n        if(headerConfig.key)\n            setSelectedRowId(row[headerConfig.key]);\n        onItemClick(row)\n    };\n\n    return (row, index) => {\n        const hasClick = !!onItemClick;\n\n        /** @namespace header.cellStyle */\n        return (\n            <TableRow key={index}\n                      className={hasClick ? classes.rowWithClick : classes.rowWithoutClick}\n                      >\n                {headerConfig.columns.map((header, index) => (\n                    <TableCell key={index}\n                               onClick={() => hasClick && !header.disableCellClick ? onSelectRow(row) : undefined}\n                               className={hasClick && !header.disableCellClick ? classes.cellWithClick : null}\n                               style={{\n                                        fontSize: 14,\n                                        backgroundColor: selectedRowId !== null && headerConfig.key &&\n                                        selectedRowId === row[headerConfig.key] && \"#cfcdd1\",\n                                        ...header.cellStyle\n                                    }}\n                    >\n                        <span>{getValue(row, header, onSelectRow)}</span>\n                    </TableCell>\n                ))}\n            </TableRow>\n        );\n    };\n};\n\n//'&:hover': {\nconst useStyles = makeStyles({\n    rowWithoutClick:{\n        height: 39\n    },\n    rowWithClick:{\n        height: 39,\n        '&:hover': {\n            backgroundColor: \"#fafaf9\"\n        }\n    },\n    cellWithClick: {\n        cursor: \"pointer\"\n    }\n});","import {getObjectValue} from \"./objectValue\";\n\nexport const calcPage = (allRows,  itemsPerPage, currentPageNumOrLast, totalRecordFromServer) => {\n    const result = {\n        rows: [],\n        pageList: [],\n        allPages: [],\n        pagingMessage: \"No Records\",\n        hasError: false,\n        errorMessage: \"\",\n        errorMessageDetail: \"\",\n        hasPaging: true,\n        showPrevButton: true,\n        showNextButton: true,\n        currentPageNum: currentPageNumOrLast\n    };\n\n    try {\n        const pagesToShow = 4;\n        const calcTotalRecordCount = totalRecordFromServer || allRows.length;\n        const calcTotalPages = Math.ceil(calcTotalRecordCount / itemsPerPage);\n\n        for(let pageAllIndex = 1; pageAllIndex <= calcTotalPages; pageAllIndex++)\n            result.allPages.push(pageAllIndex);\n\n        result.hasPaging = calcTotalPages > 1;\n        const currentPageNum = currentPageNumOrLast === true ? calcTotalPages : currentPageNumOrLast;\n        result.currentPageNum = currentPageNum;\n        let startPage = currentPageNum > 2 ? currentPageNum - 1 : 1;\n\n        let calcIndexStart = 0;\n        //if the page number exceeds the total number of pages or is less than zero go to page 1\n        if(currentPageNum <= calcTotalPages && currentPageNum > 0)\n            calcIndexStart = (currentPageNum -1 ) * itemsPerPage;\n        else {\n            startPage = 1;\n            result.currentPageNum = 1;\n        }\n\n        let endPage = (startPage + pagesToShow - 1) < calcTotalPages ? startPage + pagesToShow - 1 : calcTotalPages;\n        //check to make sure we have the correct number of pages showing.\n        if((endPage - startPage) < pagesToShow -1 && calcTotalRecordCount > 0 && endPage >= pagesToShow) {\n            startPage = endPage - pagesToShow + 1;\n        }\n\n        if(startPage < 0) startPage =1;\n\n        for (let pageIndex = startPage; pageIndex <= endPage; pageIndex++) {\n            result.pageList.push(pageIndex);\n        }\n\n        const endItemIndex = (calcIndexStart + itemsPerPage) < calcTotalRecordCount ? (calcIndexStart + itemsPerPage) : calcTotalRecordCount;\n        result.pagingMessage = totalRecordFromServer > 0 || calcTotalRecordCount > 0 ?\n            `${calcIndexStart + 1}-${endItemIndex} of ${calcTotalRecordCount}`\n            : \"No Data\";\n        result.totalRows = calcTotalRecordCount;\n        result.itemsPerPage = itemsPerPage;\n        result.rows = totalRecordFromServer ? allRows : allRows.slice(calcIndexStart, endItemIndex);\n        result.showPrevButton = result.currentPageNum > 1;\n        result.showNextButton = result.currentPageNum < calcTotalPages;\n    } catch (ex) {\n        result.hasError = true;\n        result.pagingMessage = \"ERROR\";\n        result.errorMessage = \"Invalid input when creating table paging\";\n        result.errorMessageDetail = ex.message || ex;\n        result.currentPageNum = 0;\n    }\n    return result;\n};\n\nexport const sortItems = (itemList, sortField, isDescending) => {\n    itemList.sort((aIn, bIn) => {\n        const aValue = getObjectValue(aIn, sortField);\n        const bValue = getObjectValue(bIn, sortField);\n\n        if(aValue.toLowerCase && bValue.toLowerCase) {\n            if (aValue.toLowerCase() < bValue.toLowerCase())\n                return isDescending ? 1 : -1;\n\n            if (aValue.toLowerCase() > bValue.toLowerCase())\n                return isDescending ? -1 : 1;\n        } else {\n            if (aValue < bValue)\n                return isDescending ? 1 : -1;\n\n            if (aValue > bValue)\n                return isDescending ? -1 : 1;\n        }\n        return 0;\n    });\n};\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\"\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\nimport Checkbox from \"@material-ui/core/Checkbox\"\n\nimport {TablePaging} from \"./tableStandard/TablePaging\";\nexport {TableSkeletonPaging} from \"./tableStandard/TableSkeletonPaging\";\n\nexport const headerConfig = {\n    key: \"id\",\n    itemsPerPage: 0,\n    defaultSort: \"firstName\",\n    columns: [\n        {  fieldForSort: \"id\", columnLabel: \"Id\",\n            headerCellStyle:{width:80}, hideWhenCondensed: true\n        },\n        {\n            fieldForSort: \"firstName\",\n            columnLabel: \"Name First\",\n            headerCellStyle:{width:120},\n            disableCellClick: true\n        },\n        { fieldForSort: \"lastName\", columnLabel: \"Name Last\",\n            headerCellStyle:{width:120}\n        },\n        { fieldForSort: \"location.city\", columnLabel: \"Location\" },\n        { display: (row)=> `${row.lastName}, ${row.firstName}`, columnLabel: \"Full Name\" }\n    ]\n};\n\nexport {TablePaging};\n\nexport class TableDemo extends React.Component {\n    state = {\n        loading: true,\n        users: mockUsers,\n        filterText: \"\",\n        removeStyling: true,\n        selectedUser: null\n    };\n\n    constructor() {\n        super();\n        //this.timeOut = this.timeOut.bind(this);\n    }\n\n    componentDidMount() {\n        setTimeout(() => this.timeOut(), 2000);\n    }\n\n    searchName(itemList) {\n        const {filterText} = this.state;\n        return itemList.filter((user) => {\n            return user.firstName.toLowerCase().indexOf(filterText.toLowerCase()) > -1;\n        });\n    };\n\n    timeOut() {\n        // noinspection JSCheckFunctionSignatures\n        this.setState({loading:false});\n    }\n\n    handleChange = (name, value) => {\n        this.setState({ [name]: value });\n    };\n\n    handleRowClick = (user) => {\n        // noinspection JSCheckFunctionSignatures\n        this.setState({selectedUser: user});\n    };\n\n    render() {\n        const {loading, users, filterText, removeStyling, selectedUser} = this.state;\n        return (\n            <React.Fragment>\n\n                <div style={{display:\"flex\"}}>\n                    <h4 style={{marginLeft: 20}}>\n                        Table with Paging and Search\n                    </h4>\n                    <TextField\n                        label=\"Search\"\n                        style={{marginLeft: 40}}\n                        vaule={filterText}\n                        onChange={(event) => this.handleChange(\"filterText\", event.target.value)}\n                    />\n                    <FormControlLabel\n                        style={{marginLeft: 10}}\n                        control={\n                            <Checkbox\n                                checked={removeStyling}\n                                onChange={() => this.setState({removeStyling: !removeStyling}) }\n                                value=\"checkedB\"\n                                color=\"primary\"\n                            />\n                        }\n                        label=\"Remove Styling\"\n                    />\n                    {selectedUser === null && <span style={{marginTop: 21}} > | Click on a Row</span>}\n                    {selectedUser && <span style={{marginTop: 21}}> | Selected {selectedUser.firstName} {selectedUser.lastName}</span>}\n                </div>\n                <TablePaging loading={loading}\n                             dataList={users}\n                             headerConfig={headerConfig}\n                             filterText={filterText}\n                             tableStyleName={removeStyling ? \"\" : \"stripe-table\"}\n                             onRowClick = {(user) => this.handleRowClick(user)}\n                             useMaterialUiPaging={true}\n                             //searchFunction={(dataList) => this.searchName(dataList)}\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nexport const mockUsers = [\n    {\n        \"id\": 9,\n        \"firstName\": \"Cassandra\",\n        \"lastName\": \"Andrews\",\n        \"location\": { \"city\" : \"Dotsero\" }\n    },\n    {\n        \"id\": 1,\n        \"firstName\": \"Lakisha\",\n        \"lastName\": \"Alvarez\",\n        \"location\": { \"city\" : \"Winfred\" }\n    },\n    {\n        \"id\": 2,\n        \"firstName\": \"Kathy\",\n        \"lastName\": \"Fox\",\n        \"location\": { \"city\" : \"Gorst\"}\n    },\n    {\n        \"id\": 3,\n        \"firstName\": \"Cote\",\n        \"lastName\": \"Haynes\",\n        \"location\": { \"city\" : \"Fairhaven\"}\n    },\n    {\n        \"id\": 4,\n        \"firstName\": \"Toni\",\n        \"lastName\": \"Rose\",\n        \"location\": { \"city\" : \"Leroy\"}\n    },\n    {\n        \"id\": 5,\n        \"firstName\": \"Lauren\",\n        \"lastName\": \"Clark\",\n        \"location\": { \"city\" : \"Marne\"}\n    },\n    {\n        \"id\": 6,\n        \"firstName\": \"Mckenzie\",\n        \"lastName\": \"Davidson\",\n        \"location\": { \"city\" : \"Tetherow\"}\n    },\n    {\n        \"id\": 7,\n        \"firstName\": \"Mallory\",\n        \"lastName\": \"Roman\",\n        \"location\": { \"city\" : \"Sterling\" }\n    },\n    {\n        \"id\": 8,\n        \"firstName\": \"Walls\",\n        \"lastName\": \"Mack\",\n        \"location\": { \"city\" : \"Onton\" }\n    },\n    {\n        \"id\": 0,\n        \"firstName\": \"Amie\",\n        \"lastName\": \"Shepherd\",\n        \"location\": { \"city\" : \"Catherine\"}\n    },\n    {\n        \"id\": 10,\n        \"firstName\": \"Jewel\",\n        \"lastName\": \"Wise\",\n        \"location\": { \"city\" : \"Rutherford\"}\n    },\n    {\n        \"id\": 11,\n        \"firstName\": \"Christina\",\n        \"lastName\": \"Woodard\",\n        \"location\": { \"city\" : \"Websterville\"}\n    },\n    {\n        \"id\": 12,\n        \"firstName\": \"Nicole\",\n        \"lastName\": \"Tillman\",\n        \"location\": { \"city\" : \"Beaulieu\"}\n    },\n    {\n        \"id\": 13,\n        \"firstName\": \"Robinson\",\n        \"lastName\": \"Larsen\",\n        \"location\": { \"city\" : \"Benson\"}\n    },\n    {\n        \"id\": 14,\n        \"firstName\": \"Carissa\",\n        \"lastName\": \"Hogan\",\n        \"location\": { \"city\" : \"Kenwood\" }\n    },\n    {\n        \"id\": 15,\n        \"firstName\": \"Garrett\",\n        \"lastName\": \"Sutton\",\n        \"location\": { \"city\" : \"Torboy\"}\n    },\n    {\n        \"id\": 16,\n        \"firstName\": \"Beach\",\n        \"lastName\": \"Abbott\",\n        \"location\": { \"city\" : \"Ruckersville\"}\n    },\n    {\n        \"id\": 17,\n        \"firstName\": \"Lacy\",\n        \"lastName\": \"Bird\",\n        \"location\": { \"city\" : \"Belleview\"}\n    },\n    {\n        \"id\": 18,\n        \"firstName\": \"Misty\",\n        \"lastName\": \"Cooley\",\n        \"location\": { \"city\" : \"Fowlerville\"}\n    }\n];","import './index.css'\nimport React from 'react'\nimport {render} from 'react-dom'\nimport {TableDemo} from \"./tables\";\n\nrender(<TableDemo />, document.querySelector('#app'));\n\n"],"sourceRoot":""}